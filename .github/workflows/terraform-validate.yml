name: Terraform Validation

on:
  push:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-validate.yml'
  pull_request:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-validate.yml'
  workflow_dispatch:

env:
  TERRAFORM_VERSION: '1.9.5'
  TERRAFORM_DIR: './terraform'

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        working-directory: ${{ env.TERRAFORM_DIR }}
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend=false
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Comment PR - Format Check
        if: github.event_name == 'pull_request' && steps.fmt.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **Terraform Format Check Failed**\n\nPlease run `terraform fmt` to fix formatting issues.'
            })

      - name: Comment PR - Validation
        if: github.event_name == 'pull_request' && (steps.init.outcome == 'failure' || steps.validate.outcome == 'failure')
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **Terraform Validation Failed**\n\nPlease check the workflow logs for details.'
            })

      - name: Fail if format check failed
        if: steps.fmt.outcome == 'failure'
        run: exit 1

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy security scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: ${{ env.TERRAFORM_DIR }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  checkov:
    name: Checkov Security Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ${{ env.TERRAFORM_DIR }}
          framework: terraform
          output_format: sarif
          output_file_path: reports/checkov.sarif
          skip_check: CKV_AZURE_140,CKV_AZURE_141  # Skip checks that may not apply

      - name: Upload Checkov results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: reports/checkov.sarif

  tflint:
    name: TFLint Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Initialize TFLint
        run: tflint --init
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Run TFLint
        run: tflint --format compact
        working-directory: ${{ env.TERRAFORM_DIR }}

